|                                                                                   |
|                                  Dev.BUSHRA                                       |
|                                CSS CheatSheet                                     |
|-----------------------------------------------------------------------------------|
|                              All CSS Properties                                   |
|                      www.w3schools.com/css/css3_2dtransforms.asp                  |
|-----------------------------------------------------------------------------------|
|
|




[Color]
mix-blend-mode	    Specifies how an element's content should blend with its direct parent background
color	                    Sets the color of text
[3D]
perspective	        Gives a 3D-positioned element some perspective
perspective          how many pixels the 3D element is placed from the view 
perspective-origin   where is the 3D element based in the x- and y-axis 
perspective-origin	Defines at which position the user is looking at the 3D-positioned element
z-index     controle the 3d position and what element is above the other element.
[Transform]    
transform	Applies a 2D or 3D transformation to an element
transform-origin	Allows you to change the position on transformed elements
transform-style	Specifies how nested elements are rendered in 3D space
transition	A shorthand property for all the transition-* properties
transition-delay	Specifies when the transition effect will start
transition-duration	Specifies how many seconds or milliseconds a transition effect takes to complete
transition-property	Specifies the name of the CSS property the transition effect is for
transition-timing-function	Specifies the speed curve of the transition effect
[Animation] 
animation                    binds an animation to an element 
animation-delay              delays animation start 
animation-direction          reverse animation or in alternate cycles 
animation-duration           animation duration in seconds or ms 
animation-fill-mode          style when the animation is not playing 
animation-iteration-count    number of an animation replay 
animation-name               name for the @keyframes{} animation 
animation-play-state         the animation is running or paused 
animation-timing-function    speed curve of an animation 
backface-visibility          is element visible when not facing the screen 
@keyframes                   specifies the animation code {}
animation	                 A shorthand property for "all the animation-* properties
animation-delay	             Specifies a delay for the start of an animation
animation-direction	         Specifies whether an animation should be played forwards, backwards or in alternate cycles
animation-duration	         Specifies how long an animation should take to complete one cycle
animation-fill-mode     	 Specifies a style for the element when the animation is not playing. (before it starts, after it ends, or both) 
animation-iteration-count	 Specifies the number of times an animation should be played
animation-name	             Specifies a name for the @keyframes {} animation
animation-play-state	     Specifies whether the animation is running or paused 
animation-timing-function	 Specifies the speed curve of an animation 
[Align] 
align-content       behavior of the flex-wrap property 
align-items         alignment of items inside the container 
align-self          alignment of the selected item 
[Justify]
justify-content     justifies flexible container's items horizontally if necessary 
justify-item        set on the grid container to give child elements (grid items) alignment in the inline direction. 
justify-self        aligns a grid item within its grid cell in the inline direction. 
[Position]
position	        Specifies the type of positioning method used for an element (static, relative, absolute or fixed)

[Flex] 
flex	                    A shorthand property for the flex-grow, flex-shrink, and the flex-basis properties
flex-basis       initial length of a flexible item 
flex-direction   direction of the flexible items    
flex-flow        shorthand for flex-direction and flex-wrap 
flex-grow        how much the item will grow relative other items 
flex-shrink      how to shrink the item relative to other items 
flex-wrap        wrap flexible items 
flex-basis	     Specifies the initial length of a flexible item
flex-direction  Specifies the direction of the flexible items
flex-flow	     A shorthand property for the flex-direction and the flex-wrap properties
flex-grow	     Specifies how much the item will grow relative to the rest
flex-shrink	     Specifies how the item will shrink relative to the rest
flex-wrap	     Specifies whether the flexible items should wrap or not
[Grid] 
grid-area                    Either specifies a "name for the grid item", or this property is a shorthand property for the "grid-row-start, grid-column-start, grid-row-end, and grid-column-end" properties 
grid-auto-columns	         Specifies a "default column size" 
grid-auto-flow	             Specifies how auto-placed items are inserted in the grid 
grid-auto-rows	             Specifies a "default row size" 
grid-column	                 A shorthand property for the "grid-column-start and the grid-column-end" properties 
grid-column-end	             Specifies "where to end the grid item" 
grid-column-gap	             Specifies the "size of the gap between columns" 
grid-column-start	         Specifies "where to start the grid item" 
grid-gap	                 A shorthand property for the "grid-row-gap and grid-column-gap" properties 
gap	                         A shorthand property for the "row-gap and the column-gap" properties 
grid-row	                 A shorthand property for the "grid-row-start and the grid-row-end" properties 
grid-row-end	             Specifies "where to end the grid item" 
grid-row-gap	             Specifies the "size of the gap between rows" 
grid-row-start	             Specifies "where to start the grid item" 
grid-template	             A shorthand property for the "grid-template-rows, grid-template-columns and grid-areas" properties 
grid-template-areas	         Specifies "how to display columns and rows", using named grid items 
grid-template-columns	     Specifies the "size of the columns, and how many columns in a grid layout" 
grid-template-rows	         Specifies the "size of the rows in a grid layout" 
[Background] 
background               all bg properties in one declaration 
background-attachment    is the bg image scroll/ fixed/ local 
background-blend-mode    blend mode of each bg layer 
background-clip          painting area of the bg 
background-origin        where is the bg imade is positioned 
background-position      position of the bg image 
background-repate        bg image repeated no/ repeat/ repeat-x/ repeat-y 
background-size          bg image size 
background	                 A shorthand property for all the background-* properties 
background-attachment	     Sets whether a background image scrolls with the rest of the page, or is fixed 
background-blend-mode	     Specifies the blending mode of each background layer (color/image) 
background-clip	             Defines how far the background (color or image) should extend within an element 
background-color	         Specifies the background color of an element 
background-image	         Specifies one or more background images for an element 
background-origin	         Specifies the origin position of a background image 
background-position	         Specifies the position of a background image 
background-repeat	         Sets if/how a background image will be repeated 
background-size	             Specifies the size of the background images 
[Border]
border                       set border properties 
border-bottom                bottom border properties in one line 
border-bottom-color          color of the bottom border 
border-bottom-left-radius    border bottom left radius 
border-bottom-right-radius   border bottom right radius 
border-bottom-style          border bottom style 
border-bottom-width          border bottom width 
border-collapse              border collapse 
border-color                 border color 
border-image                 sets an image as border 
border-image-outset          border image area extends beyond the border box 
border-image-repeat          border image repeated, rounded or stretched 
border-image-slice           how to slice the border image 
border-image-source          path to the border image 
border-image-width           border image width 
border-left                  left border properties in one line 
border-left-color            border left color 
border-left-style            border left style 
border-left-width            border left width 
border-radius                border radius of the four rounded corners 
border-right                 right border properties in one line 
border-right-color           border right color 
border-right-style           border right style 
border-right-width           border right width 
border-spacing               border spacing 
border-style                 border style 
border-top                   top border properties in one line 
border-top-color             border top color 
border-top-left-radius       border top left radius 
border-top-right-radius      border top right radius 
border-top-style             border top style 
border-top-width             border top width 
border-width                 border width 

[Column] 
columns              set column-width and column-count 
column-count         divide the content in columns 
column-fill          balanced fill or not 
column-gap           gap between the columns    
column-rule          separator between columns, like border 
column-rule-color    column rule color 
column-rule-style    column rule style 
column-rule-width    column rule width 
column-span          column span 
column-width         column width 
column-count	            Specifies the number of columns an element should be divided into
column-fill	                Specifies how to fill columns, balanced or not
column-gap	                Specifies the gap between the columns
column-rule	                A shorthand property for all the column-rule-* properties
column-rule-color	        Specifies the color of the rule between columns
column-rule-style	        Specifies the style of the rule between columns
column-rule-width	        Specifies the width of the rule between columns
column-span	                Specifies how many columns an element should span across
column-width	            Specifies the column width
columns	                    A shorthand property for column-width and column-count
[Font] 
font                 all font properties in one line 
@font-face           declare non-web-safe fonts {}
font-family          font of the element 
font-size            font size    
font-size-adjust     control font size if the first declared option is not available 
font-stretch         widen or narrow text 
font-style           font style: normal, italic, oblique 
font-variant         set small-caps 
font-weight          use bold or thin characters 
font	                    A shorthand property for the font-style, font-variant, font-weight, font-size/line-height, and the font-family properties
@font-face	                A rule that allows websites to download and use fonts other than the "web-safe" fonts
font-family	                Specifies the font family for text
font-feature-settings	    Allows control over advanced typographic features in OpenType fonts
@font-feature-values{}	    Allows authors to use a common name in font-variant-alternate for feature activated differently in OpenType
font-kerning	            Controls the usage of the kerning information (how letters are spaced)
font-language-override	    Controls the usage of language-specific glyphs in a typeface
font-size	                Specifies the font size of text
font-size-adjust	        Preserves the readability of text when font fallback occurs
font-stretch	            Selects a normal, condensed, or expanded face from a font family
font-style	                Specifies the font style for text
font-synthesis	            Controls which missing typefaces (bold or italic) may be synthesized by the browser
font-variant	            Specifies whether or not a text should be displayed in a small-caps font
font-variant-alternates	    Controls the usage of alternate glyphs associated to alternative names defined in @font-feature-values{}
font-variant-caps	        Controls the usage of alternate glyphs for capital letters
font-variant-east-asian	    Controls the usage of alternate glyphs for East Asian scripts (e.g Japanese and Chinese)
font-variant-ligatures	    Controls which ligatures and contextual forms are used in textual content of the elements it applies to
font-variant-numeric	    Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers
font-variant-position	    Controls the usage of alternate glyphs of smaller size positioned as superscript or subscript regarding the baseline of the font
font-weight	                Specifies the weight of a font
letter-spacing	                Increases or decreases the space between characters in a text
text-align	Specifies the horizontal alignment of text
text-align-last	Describes how the last line of a block or a line right before a forced line break is aligned when text-align is "justify"
text-combine-upright	Specifies the combination of multiple characters into the space of a single character
text-decoration	Specifies the decoration added to text
text-decoration-color	Specifies the color of the text-decoration
text-decoration-line	Specifies the type of line in a text-decoration
text-decoration-style	Specifies the style of the line in a text decoration
text-indent	Specifies the indentation of the first line in a text-block
text-justify	Specifies the justification method used when text-align is "justify"
text-orientation	Defines the orientation of the text in a line
text-overflow	Specifies what should happen when text overflows the containing element
text-shadow	Adds shadow to text
text-transform	Controls the capitalization of text
text-underline-position	Specifies the position of the underline which is set using the text-decoration property
word-break	    Specifies how words should break when reaching the end of a line
word-spacing	Increases or decreases the space between words in a text
word-wrap	    Allows long, unbreakable words to be broken and wrap to the next line
writing-mode	Specifies whether lines of text are laid out horizontally or vertically
white-space     Specifies how white-space inside an element is handled

[Line]
line-break	                    Specifies how/if to break lines
line-height	                    Sets the line height
[List] 
list-style           all list properties in one line 
list-style-image     replace the list item marker with an image 
list-style-position  list item markers inside or outside the content flow 
list-style-type      set the type of the list item marker 
[P] 
page-break-after	Sets the page-break behavior after an element
page-break-before	Sets the page-break behavior before an element
page-break-inside	Sets the page-break behavior inside an element
[Outline] 
outline          A shorthand property for the outline-width, outline-style, and the outline-color properties (drow an outer border around elemen)
outline-color    outline color 
outline-offset   gap between the element and the outline 
outline-style    outline style 
outline-width    outline width 

[Overflow] 
overflow     hide, display or scroll if the content overflows its container 
overflow-x   horizontal overflow 
overflow-y   vertical overflow 
overflow
Specifies what happens if content overflows an element's box
overflow-wrap	Specifies whether or not the browser can break lines with long words, if they overflow the container
overflow-x	Specifies whether or not to clip the left/right edges of the content, if it overflows the element's content area
overflow-y	Specifies whether or not to clip the top/bottom edges of the content, if it overflows the element's content area

[Scroll]
scroll-behavior	Specifies whether to smoothly animate the scroll position in a scrollable box, instead of a straight jump
[Text] 
text-align       horizontal alignment of text 
text-align-last  horizontal alignment of last line of tex 
text-decoration  overline, underline or line-through the text 
text-indent      indentation of the first line of the text 
text-overflow    the way how overflowed content is marked (ellipsis) 
text-shadow      text shadow 
text-transform   capitalization of text 
[Mask] 
mask	            Hides parts of an element by masking or clipping an image at specific places
mask-clip	        Specifies the mask area
mask-composite	    Represents a compositing operation used on the current mask layer with the mask layers below it
mask-image	        Specifies an image to be used as a mask layer for an element
mask-mode	        Specifies whether the mask layer image is treated as a luminance mask or as an alpha mask
mask-origin	        Specifies the origin position (the mask position area) of a mask layer image
mask-position	    Sets the starting position of a mask layer image (relative to the mask position area)
mask-repeat	        Specifies how the mask layer image is repeated
mask-size	        Specifies the size of a mask layer image
mask-type	        Specifies whether an SVG <mask> element is treated as a luminance mask or as an alpha mask
[Box]
box-shadow           shadow to element 
box-sizing           box sizing properties
box-decoration-break	    Sets the behavior of the background and border of an element at page-break, or, for in-line elements, at line-break.
box-shadow	                Attaches one or more shadows to an element
box-sizing	                Defines how the width and height of an element are calculated: should they include padding and borders, or not
[Break]
break-after	                Specifies whether or not a page-, column-, or region-break should occur after the specified element
break-before	            Specifies whether or not a page-, column-, or region-break should occur before the specified element
break-inside	            Specifies whether or not a page-, column-, or region-break should occur inside the specified element
[Nav]
nav-down             where to navigate when the the arrow-down button is pressed 
nav-index            sets sequential navigation order 
nav-left             where to navigate when the the arrow-left button is presse 
nav-right            where to navigate when the the arrow-right button is pressed 
nav-up               where to navigate when the the arrow-up button is presse 
[Tab] 
tab-size	Specifies the width of a tab character

[Table]
table-layout	Defines the algorithm used to lay out table cells, rows, and columns



=====================================================================================
[Others]
all                  change all properties 
bottom               bottom offset for relative and absolute elements 
caption-side         placement of a table caption 
clear                deny floating of an element 
clip                 clip an absolutely positioned element 
color                text color 
content              insert content :before and :after elements 
counter-increment    count sections 
counter-reset        reset counter 
cursor               cursor type when element is hovered 
direction            writing direction, Arabic is using rtl 
display              box display type    
empty-cells          hide borders and background on empty table cells 
filter               image effects: grayscale, blur, invert etc.    
float                float elements left or right 
hanging-punctuation  can a punctuation mark be placed outside the line box? 
letter-spacing       space between characters 
line-height          line height of text or inline-block elements 
opacity              transparency level of an element 
order                reorder elements in a container 
page-break-after     adds page break after an element 
page-break-before    adds page break before an element 
page-break-inside    allow page break inside an element 
position             positioning type: absolute, fixed, relative, static 
quotes               set quotation marks to wrap an element 
resize               declare resizable elements 
right                right offset for relative and absolute elements 
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================
=====================================================================================


/*  ================================================[ All CSS Properties by Alphabet ]===========================================================  */

[A] 
all	                         Resets all properties (except unicode-bidi and direction) 
[B] 
backface-visibility	         Defines whether or not the back face of an element should be visible when facing the user 
bottom	                    Sets the elements position, from the bottom of its parent element
[C] 
caption-side	            Specifies the placement of a table caption
caret-color	                Specifies the color of the cursor (caret) in inputs, textareas, or any element that is editable
@charset{}	                Specifies the character encoding used in the style sheet
clear	                    Specifies what should happen with the element that is next to a floating element
clip	                    Clips an absolutely positioned element
content	                    Used with the :before and :after pseudo-elements, to insert generated content
counter-increment	        Increases or decreases the value of one or more CSS counters
counter-reset	            Creates or resets one or more CSS counters
cursor	                    Specifies the mouse cursor to be displayed when pointing over an element
[D] 
direction	                Specifies the text direction/writing direction
display	                    Specifies how a certain HTML element should be displayed.
[E] 
empty-cells	                Specifies whether or not to display borders and background on empty cells in a table
[F] 
filter	                    Defines effects (e.g. blurring or color shifting) on an element before the element is displayed
float	                    Specifies whether an element should float to the left, right, or not at all
[H] 
hanging-punctuation	         Specifies whether a punctuation character may be placed outside the line box 
hyphens	                     Sets how to split words to improve the layout of paragraphs 
[I] 
image-rendering	              Specifies the "type of algorithm to use for image scaling" 
@import{}	                      Allows you to "import a style sheet" into another style sheet 
isolation	                  Defines whether an element must create a new stacking content 
[L] 
left	                        Specifies the left position of a positioned element
[O] 
object-fit	Specifies how the contents of a replaced element should be fitted to the box established by its used height and width
object-position	Specifies the alignment of the replaced element inside its box
opacity	Sets the opacity level for an element
order	Sets the order of the flexible item, relative to the rest
orphans	Sets the minimum number of lines that must be left at the bottom of a page or column


pointer-events	    Defines whether or not an element reacts to pointer events
[Q] 
quotes	Sets the type of quotation marks for embedded quotations
[R] 
resize	Defines if (and how) an element is resizable by the user
right	Specifies the right position of a positioned element
row-gap	Specifies the gap between the grid rows
[S] 
top	Specifies the top position of a positioned element


[U] 
unicode-bidi	Used together with the direction property to set or return whether the text should be overridden to support multiple languages in the same document
user-select	Specifies whether the text of an element can be selected

[V] 
vertical-align	Sets the vertical alignment of an element
visibility	Specifies whether or not an element is visible

[W] 
widows	        Sets the minimum number of lines that must be left at the top of a page or column
width	        Sets the width of an element

[Z]

/*  =====================================================[ CSS Selectors ]===========================================================================  */

Selector	            Example	                    description

.class	                .intro	                    Selects all elements with class="intro"
.class1                 .class2	.name1.name2	    Selects all elements with both name1 and name2 set within its class attribute
.class1                 .class2	.name1 .name2	    Selects all elements with name2 that is a descendant of an element with name1
#id	                    #firstname	                Selects the element with id="firstname"
*	                    *	                        Selects all elements
element	                p	                        Selects all <p> elements
element.class	        p.intro	                    Selects all <p> elements with class="intro"
element,element	        div, p	                    Selects all <div> elements and all <p> elements
element element	        div p	                    Selects all <p> elements inside <div> elements
element>element	        div > p	                    Selects all <p> elements where the parent is a <div> element
element+element	        div + p	                    Selects the first <p> element that is placed immediately after <div> elements
element1~element2       p ~ ul	                    Selects every <ul> element that is preceded by a <p> element
[attribute]	            [target]	                Selects all elements with a target attribute
[attribute=value]	    [target=_blank]	            Selects all elements with target="_blank"
[attribute~=value]	    [title~=flower]	            Selects all elements with a title attribute containing the word "flower"
[attribute|=value]	    [lang|=en]	                Selects all elements with a lang attribute value equal to "en" or starting with "en-"
[attribute^=value]	    a[href^="https"]	        Selects every <a> element whose href attribute value begins with "https"
[attribute$=value]	    a[href$=".pdf"]	            Selects every <a> element whose href attribute value ends with ".pdf"
[attribute*=value]	    a[href*="w3schools"]        Selects every <a> element whose href attribute value contains the substring "w3schools"
:active	                a:active	                Selects the active link
::after	                p::after	                Insert something after the content of each <p> element
::before	            p::before	                Insert something before the content of each <p> element
:checked	            input:checked	            Selects every checked <input> element
:default	            input:default	            Selects the default <input> element
:disabled	            input:disabled	            Selects every disabled <input> element
:empty	                p:empty	                    Selects every <p> element that has no children (including text nodes)
:enabled	            input:enabled	            Selects every enabled <input> element
:first-child	        p:first-child	            Selects every <p> element that is the first child of its parent
::first-letter	        p::first-letter     	    Selects the first letter of every <p> element
::first-line	        p::first-line	            Selects the first line of every <p> element
:first-of-type	        p:first-of-type	            Selects every <p> element that is the first <p> element of its parent
:focus	                input:focus	                Selects the input element which has focus
:fullscreen	            :fullscreen	                Selects the element that is in full-screen mode
:hover	                a:hover	                    Selects links on mouse over
:in-range	            input:in-range	            Selects input elements with a value within a specified range
:indeterminate	        input:indeterminate	        Selects input elements that are in an indeterminate state
:invalid	            input:invalid	            Selects all input elements with an invalid value
:lang(language)	        p:lang(it)	                Selects every <p> element with a lang attribute equal to "it" (Italian)
:last-child	            p:last-child	            Selects every <p> element that is the last child of its parent
:last-of-type	        p:last-of-type	            Selects every <p> element that is the last <p> element of its parent
:link	                a:link	                    Selects all unvisited links
::marker	            ::marker	                Selects the markers of list items
:not(selector)	        :not(p)	                    Selects every element that is not a <p> element
:nth-child(n)	        p:nth-child(2)	            Selects every <p> element that is the second child of its parent
:nth-last-child(n)      p:nth-last-child(2)	        Selects every <p> element that is the second child of its parent, counting from the last child
:nth-last-of-type(n)    p:nth-last-of-type(2)	    Selects every <p> element that is the second <p> element of its parent, counting from the last child
:nth-of-type(n)	        p:nth-of-type(2)	        Selects every <p> element that is the second <p> element of its parent
:only-of-type	        p:only-of-type	            Selects every <p> element that is the only <p> element of its parent
:only-child	            p:only-child	            Selects every <p> element that is the only child of its parent
:optional               input:optional	            Selects input elements with no "required" attribute
:out-of-range	        input:out-of-range	        Selects input elements with a value outside a specified range
::placeholder	        input::placeholder	        Selects input elements with the "placeholder" attribute specified
:read-only	            input:read-only	            Selects input elements with the "readonly" attribute specified
:read-write	            input:read-write	        Selects input elements with the "readonly" attribute NOT specified
:required	            input:required	            Selects input elements with the "required" attribute specified
:root	                :root	                    Selects the document's root element
::selection	            ::selection	                Selects the portion of an element that is selected by a user
:target	                #ClassName:target	        Selects the current active #ClassName element (clicked on a URL containing that anchor name)
:valid	                input:valid	                Selects all input elements with a valid value
:visited	            a:visited	                Selects all visited links

Selector Types :
    1. Descendant Selectors         #content p{property: value;}
    2. Child Selectors              #content > p{property: value;}              Select only the direct child of the tag.
    3. Adjacent Selectors           #articles h2 + p{property: value;}          Select the elemants which comes directly after another elemant.
    4. Attribute Selectors          span[class="check"]{property: value;}
    5. Pseudo Class Selectors       a:hover{property: value;}
    8. Combining Selectors :        div.featcher-content{property: value;}      Combin selector with class/ID selector without space in btween, and its get  you the tag that have a class/ID as the selctor.
    9. The Universal Selector       *{property: value;}                         Select all the html tags in the page

/*  =======================================================[ CSS Functions ]====================================================================  */

CSS functions are used as a value for various CSS properties.

Function	        Description

attr()	            Returns the value of an attribute of the selected element
calc()	            Allows you to perform calculations to determine CSS property values
conic-gradient()	Creates a conic gradient
counter()	        Returns the current value of the named counter
cubic-bezier()	    Defines a Cubic Bezier curve
hsl()	            Defines colors using the Hue-Saturation-Lightness model (HSL)
hsla()	            Defines colors using the Hue-Saturation-Lightness-Alpha model (HSLA)
linear-gradient()	Creates a linear gradient
max()	            Uses the largest value, from a comma-separated list of values, as the property value
min()	            Uses the smallest value, from a comma-separated list of values, as the property value
radial-gradient()	Creates a radial gradient
repeating-conic-gradient()	Repeats a conic gradient
repeating-linear-gradient()	Repeats a linear gradient
repeating-radial-gradient()	Repeats a radial gradient
rgb()	            Defines colors using the Red-Green-Blue model (RGB)
rgba()	            Defines colors using the Red-Green-Blue-Alpha model (RGBA)
var()	            Inserts the value of a custom property

/* ==================================================[ Position Property ]============================================================================ */

- Position Property takes one of these values:
1. Static
2. Relative
3. Absolute
4. Fixed
5. Inherit
6. Sticky

[Static]

[Relative] 
- Use to: Move the element from its orignal place.
Put the element in the default/orignal position/place.
Allow you to move the element from its default/orignal position/place through (left, right, top, bottom) properties.

[Absolute]
- Use to: Move the element so far from its orignal place without holding a empty space in the document flow. 
Set the element absolutely relative to the parent element (parent must be relative element).
Take the element from the normal document flow and conect it to its parent element document flow (the element will be flying in the page without orignal place only you can fit it inside a spesific place).

[Fixed]

[Inherit]

[Sticky]
- Use to:
A mix btween 


/* ==============================================================[ Unites ]====================================================================  */

There are two types of length units: 
1. absolute   2. relative.

1. [Absolute Lengths] :
The absolute length units are fixed and a length expressed in any of these will appear as exactly that size.
Absolute length units are not recommended for use on screen, because screen sizes vary so much. However, they can be used if the output medium is known, such as for print layout.
(Geting the element out of the "Main Document Floats")

Unit	Description
cm	    centimeters
mm	    millimeters
in	    inches (1in = 96px = 2.54cm)
px     *pixels (1px = 1/96th of 1in)
pt	    points (1pt = 1/72 of 1in)
pc	    picas (1pc = 12 pt)

* Pixels (px) are relative to the viewing device. For low-dpi devices, 1px is one device pixel (dot) of the display. For printers and high resolution screens 1px implies multiple device pixels.

2. [Relative Lengths] :
Relative length units specify a length relative to another length property. Relative length units scale better between different rendering medium.
(Keeping the element out of the "Main Document Floats")

Unit	Description	
em	    Relative to the font-size of the element (2em means 2 times the size of the current font)	
ex	    Relative to the x-height of the current font (rarely used)	
ch	    Relative to the width of the "0" (zero)	
rem	    Relative to font-size of the root element	
vw	    Relative to 1% of the width of the viewport*	
vh	    Relative to 1% of the height of the viewport*	
vmin	Relative to 1% of viewport's* smaller dimension	
vmax	Relative to 1% of viewport's* larger dimension	
%	    Relative to the parent element

/* ======================================================[ Media Querey ]=============================================================== */

/* Media query use when specific action happend and its change the proparity of it or of other tages. */
@media screen and (properity-name: value) {
    properity-name: value;
}


/* =====================================================[  The Net Ninja Courses ]================================================================== */

[Custom Properties] (Variables) :
    :root{
        --variable-name: value;
        --font-color: #999;
        --them-color: #fff;
        --text-size: 18px;
    }

    banner{
        background: var(--them-color);
        font-size: var(--text-size);
    }
/* NOTE: you can overwrite the Custom Properties inside in any tage properties.  */

[Example] :
Animate the background-color from red to blue: 
    @keyframes mymove {
    from {background-color: red;}
    to {background-color: blue;}
    }

[Gradient] :
    background: linear-gradient(position, #fromcolor startwith%, #tocolor endwith%);
    background: -moz-linear-gradient(top, #aadddd 0%, #77aaaa 100%);  to let firefox support gradinnts 
    background: -webkit-linear-gradient(top, #aadddd 0%, #77aaaa 100%);  to let chrom support gradinnts 
    background: linear-gradient(top, #aadddd 0%, #77aaaa 100%);


[Cool Gradiants Code Genarate] :
    https://www.colorzilla.com/gradient-editor/  


[Box Shadow] : 
box-shadow: horizontalPosition verticalPosition blureRadius spreadValue rgba(0,0,0,0.6);
box-shadow: 2px 2px 4px 6px rgba(255, 59, 90, 0.7);

[Cool Box Shadow Code Genarate] :
https://www.cssmatic.com/box-shadow/

[Fallback Option] : 
fallback option can help you if the browser dont support the CSS rule.
 
[Cool website to checks css rule over the diffrent browser] :
https://www.caniuse.com/ 
https://www.pleeease.io/
https://www.modernizr.com


display: flex;      definition & what it does.
flex-shrink         definition & what it does.
flex-grow; 1;        ...
flex-wrap: wrap;     wrap and move the element to the next line.
flex-basis: 100px;  (inishule width) same as min-width but it can be shrink when the browser window get smaller.   
min-width: 100px;   make the minimumm width of element 200px and the element cant goes less than that whatever its happens.
max-width: 100px;
flex: grow shrink basis;       the best way to defind all the flex in  one line.

- Only when the browser screen is larger than 768px this flex proparites will apply :
    @media screen and (min-width: 768px){
        tag{
            proparties: value;
        }
    }

justify-contenet: center;   it will center all the flex element in the screen, and also u can use ( flex-end / flex-sart / space-around / space-btween)

Aline in Flex Basis:-
flex-flow: row/coulmn   control the place of main and cross axis.(revers in coulmn)

_ main axis
|
cross axis

aline-items: center;    controle the aline of the element in the cross axis.
justfiy-content: center; controle the aline of the element in the main axis.


Q: what is the use and the deffrents btween Floats & Flexbox & Grid?


[Grid] :
- Make an element use Grid:
in the targeted tag/class/id
    
    tag/class/id name{
        display: grid;                              to let the element use grid
        grid-template-columns: 30% 20% 10%;         defind 3 columns with there widths
        grid-template-columns: 1fr 2fr 1fr;         using fr
        grid-template-columns: repeat(3, 1fr);      same as above but its cool and easy.
        grid-template-columns: repeat(NumberOfColumns, WidthOfColumns);
    }


/* ========================================================[ Basics ]===================================================================== */ 

[Include external css file] : 
<link rel="stylesheet" type="text/css" href="/style

[Internal styles] : 
<style type="text/css">
 div { color: #444;}
</style>

[Inline styles] :
<tag style="property: value"> </tag>

[Syntax] : 
selector{
 property: value;
 property2: value2;
}

[Size] : 
1. Absolute : absolute size (px)
2. Relative : they are good in responsive designs (em, %)

[Clearfix] : 
.clearfix:after {
 clear: both;
 content: " ";
 display: block;
 font-size: 0;
 height: 0;
 visibility: hidden;
}

.clearfix { display: inline-block; }

* html .clearfix { height: 1%; }

.clearfix { display: block; }

[Box Model] :
The box model is: a way that elements represent them self in the page in terms of a space. 
    1- margin    : is the external space around the element to separate it from other elements. 
    2- border    : is the part of the box model btween the padding and the margin. 
    3- padding   : is the internal space around the element it self. 
    4- element   : is the tag it self. 



[Attribute Selectors] : 
    tagname[attributrname]       all the tagsname with a attribute 
    a[target]                    all a tags with a "target" attribute 
    a[target="_blank"]           all a tags with a "target=blank" attribute 
    p[title~="chair"]            all p tags with a title attribute containing value of "chair" in it 
     <a href^="www.chair.com"> Link</a> 
    a[href^="www"]    all a tags have a "href" attribute and its value starts with "www." 
    p[class|="chair"]             class starts with the chair word 
    p[class*="chair"]             class contains chair word 
     <a href^="chair.pdf"> PGF Link</a> 
    p[href$="pdf"]              all p tags have a attribur "href" and its value ends with "pdf" 
    input[type="button"]        specified input type 


[Pseudo Classes Selectors] :
Specifies a special state of the selected element, they got 3 type: 
1. Dynamic (behabioural state)*/
    a:link                             link in normal state 
    a:active                           link in clicked state 
    a:hover                            link with mouse over it 
    a:visited                          visited link 
    p::after{content:"yo";}            add content after p tag 
    p::before                          add content before p tag 
    input:checked                      checked inputs 
    input:disabled                     disabled inputs 
    input:enabled                      enable inputs 
    input:focus                        input has focus 
    input:in-range                     value in range 
    input:out-of-range                 input value out of range 
    input:valid                        input with valid value 
    input:invalid                      input with invalid value 
    input:optional                     no require attribute 
    input:required                     input with required attribute 
    input:read-only                    with readonly attribute 
    input:read-write                   no readonly attribute 
    
2. Structural (advanced structural) 
    div:empty                          element with no children 
    p::first-letter                    first letter in p 
    p::first-line                      first line in p 
    p:first-of-type                    first of its type 
    p:last-of-type                     last of its type 
    p:lang(en)                         p with English (en) language attribute 
    :not(span)                         element that's not span 
    p:first-child                      first child of its parent 
    p:last-child                       last child of its parent 
    p:nth-child(2)                     second child of its parent 
    p:nth-child(even)                  even child of its parent 
    p:nth-child(odd)                   odd child of its parent 
    p:nth-child(1n+1)                  even child ("n start from 0", "n=>child order", 1*n+1 = child order)  
    p:nth-child(2n+1)                  odd child 
    p:nth-child(3n+1)                  1 child then 4 child then 7 child then 10 child 
    p:nth-last-child(2)                second child from behind 
    p:nth-of-type(2)                   second child of its parent 
    p:nth-last-of-type(2)              second child of its parent from behind 
    p:only-of-type                     unique of its parent 
    p:only-child                       only child of its parent 
    :root                              documents root element 
    ::selection                        portion selected by user 
    :target                            highlight active anchor 


[Media Queries] : 
    [Syntax] 
    @media not|only mediatype and (media feature) {
    CSS Code... 
    }

[Link external file] :     
    <link rel="stylesheet" media=mediatype and|not|only
     Viewport is 480 pixels or smaller
      
    @media screen and (max-width: 480px) { }
     Viewport width smaller OR height smaller 
    @media screen and (max-width: 600px), (max-height:
     Print style 
    @media print { ... }
     Night / dark mode 
    @media (prefers-color-scheme: dark) { ... }
     Media types 
    all, print, screen, speech

[Media features] : 
        width            viewport width 
        height           viewport height 
        orientation      orientation of the viewpor 
        aspect-ratio     ratio between width & height 
        color            number of bits per color 
        color-index      number of displayable colors 
        monochrome       color on greyscale device 
        resolution       resolution of the device 
        scan             scanning process of the device 
        grid             device is a grid or bitmap 
        
[Reset CSS to default] : 
    html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5
    article,aside,details,figcaption,figure,footer,header,
    body { line-height: 1;}
    ol,ul { list-style: none;}
    blockquote,q { quotes: none;}
    blockquote:before,blockquote:after,q:before,q:after {
    table { border-collapse: collapse; border-spacing: 0;}

/* ==============================================================[ More ]====================================================== */

[Commonly Used Fallback Fonts] :
There are no 100% completely web safe fonts. There is always a chance that a font is not found or is not installed properly. Therefore, it is very important to always use fallback fonts.
This means that you should add a list of similar "backup fonts" in the font-family property. If the first font does not work, the browser will try the next one, and the next one, and so on. Always end the list with a generic font family name.
Below are some commonly used fallback fonts, organized by the 5 generic font families:
Serif
Sans-serif
Monospace
Cursive
Fantasy


[Best Web Safe Fonts for HTML and CSS]
The following fonts are the best web safe fonts for HTML and CSS:
Arial (sans-serif)
Verdana (sans-serif)
Helvetica (sans-serif)
Tahoma (sans-serif)
Trebuchet MS (sans-serif)
Times New Roman (serif)
Georgia (serif)
Garamond (serif)
Courier New (monospace)
Brush Script MT (cursive)
Note: Before you publish your website, always check how your fonts appear on different browsers and devices, and always use fallback fonts!



